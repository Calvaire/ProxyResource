# mihomo 配置
# 日期：2024-11-01 13:25:28
# 配置作者：https://t.me/iKeLee
# 适用版本：所有使用 mihomo 核心的程序

mixed-port: 7890

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
enable-process: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: false
mode: rule
log-level: debug
ipv6: false
udp: true

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

geox-url:
  # geoip: "https://ghp.ci/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.dat"
  # geosite: "https://ghp.ci/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://ghp.ci/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country.mmdb"
  asn: "https://ghp.ci/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"
  
profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - "+.mi.com"
    - "+.push.apple.com"
    - "+.apple.com"

tun:
  enable: false
  device: MihomoCore
  stack: mixed
  mtu: 1500
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  prefer-h3: true
  use-system-hosts: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-filter-mode: blacklist
  fake-ip-range: 198.18.0.0/16
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "connect.rom.miui.com"
    - "+.miwifi.com"
    - "+.ntp.org"
    - "+.u-tools.cn"
    - "+.mediatek.com"
    - "+.cfprefer1.xyz"
    - "+.wetab.link"
    - "+.tyasaka.xyz"
    # QQ
    - "localhost.ptlogin2.qq.com"
    - "localhost.sec.qq.com"
    # WeChat
    - "localhost.work.weixin.qq.com"
    - "+.weixin.qq.com"
    - "+.wechat.com"
    # Windows
    - "time.windows.com"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "+.wpsmail.net"
    - "+.henzanapp.com"
    - "+.pconline.com.cn"
  default-namerserver:
    - 223.5.5.5
  nameserver:
    - 64.6.64.6
    - 117.50.10.10
    - "2402:4e00:1::"
    - "240e:56:4000:8000::69"
  proxy-server-nameserver:
    - 117.50.10.10
    - 119.29.29.29
  fallback:
    # (Google DNS)
    - https://dns.google/dns-query

# 锚点 - 节点订阅的参数 [每24小时更新一次订阅节点]
NodeParam: &NodeParam {type: http, udp: true, interval: 86400}

# 锚点 - 节点订阅
proxy-providers: 
  机场名称1:
    url: '机场1的订阅URL'
    <<: *NodeParam
    path: './proxy_providers/机场名称1.yaml'

# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'

# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连策略]
RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 86400, format: yaml, proxy: DIRECT}

# 策略组
proxy-groups: 
  - {name: Final, type: select, proxies: [PROXY, DIRECT]}
  - {name: PROXY, type: select, proxies: [HK, TW, JP, KR, SG, US, UK]}
  - {name: HK, type: select, include-all-providers: true, filter: *FilterHK}
  - {name: TW, type: select, include-all-providers: true, filter: *FilterTW}
  - {name: JP, type: select, include-all-providers: true, filter: *FilterJP}
  - {name: KR, type: select, include-all-providers: true, filter: *FilterKR}
  - {name: SG, type: select, include-all-providers: true, filter: *FilterSG}
  - {name: US, type: select, include-all-providers: true, filter: *FilterUS}
  - {name: UK, type: select, include-all-providers: true, filter: *FilterUK}

# 订阅规则
rule-providers:
  Lan:
    <<: *RuleProviders
    path: ./rules/Lan.yaml
    url: "https://kelee.one/Tool/Clash/Rule/LAN_SPLITTER.yaml"

  Direct:
    <<: *RuleProviders
    path: ./rules/Direct.yaml
    url: "https://kelee.one/Tool/Clash/Rule/Direct.yaml"

  Proxy:
    <<: *RuleProviders
    path: ./rules/Proxy.yaml
    url: "https://kelee.one/Tool/Clash/Rule/Proxy.yaml"

  AI:
    <<: *RuleProviders
    path: ./rules/AI.yaml
    url: "https://kelee.one/Tool/Clash/Rule/AI.yaml"

  TikTok:
    <<: *RuleProviders
    path: ./rules/TikTok.yaml
    url: "https://kelee.one/Tool/Clash/Rule/TikTok.yaml"

  Netflix:
    <<: *RuleProviders
    path: ./rules/Netflix.yaml
    url: "https://rule.kelee.one/Clash/Netflix.yaml"
    
  Telegram:
    <<: *RuleProviders
    path: ./rules/Telegram.yaml
    url: "https://kelee.one/Tool/Clash/Rule/Telegram.yaml"

  Twitter:
    <<: *RuleProviders
    path: ./rules/Twitter.yaml
    url: "https://rule.kelee.one/Clash/Twitter.yaml"

  Youtube:
    <<: *RuleProviders
    path: ./rules/Youtube.yaml
    url: "https://rule.kelee.one/Clash/YouTube.yaml"

# 规则指向
rules:
  # DNS Rules
  - IP-CIDR,162.159.36.1/32,DIRECT
  - IP-CIDR,64.6.64.6/32,DIRECT
  - IP-CIDR,117.50.10.10/32,DIRECT
  - IP-CIDR6,2402:4e00:1::/128,DIRECT
  - IP-CIDR6,240e:56:4000:8000::69/128,DIRECT
  # Rule Group
  - RULE-SET, Lan, DIRECT
  - RULE-SET, Direct, DIRECT
  - RULE-SET, Proxy, PROXY
  - RULE-SET, ChinaDownloadCDN, DIRECT
  - RULE-SET, AI, US
  - RULE-SET, TikTok, US
  - RULE-SET, Netflix, SG
  - RULE-SET, Twitter, US
  - RULE-SET, Youtube, US
  - RULE-SET, Microsoft, PROXY
  - RULE-SET, Google, PROXY
  - RULE-SET, Telegram, SG
  - GEOIP, CN, DIRECT
  - MATCH, Final
